/*
 * File: purchase/controller/PurchaseController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Purchase.controller.PurchaseController', {
    extend: 'Ext.app.Controller',
    //刷新
    onPurchaseRefreshBtnClick: function(button, e, eOpts) {
		Ext.getCmp("PurchaseGridPanel").store.reload();
    },
    //添加按钮
    onPurchaseAddBtnClick: function(button, e, eOpts) {
    	Ext.create("Purchase.view.PurchaseWindow",{title:'添加采购信息',icon:'img/add.png'}).show();
    },
    //修改按钮
    onPurchaseUpdateBtnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("PurchaseGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条采购信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
         Ext.create("Purchase.view.PurchaseWindow",{title:'修改采购信息',icon:'img/update.png'}).show();
   	     Ext.getCmp("purchaseForm").loadRecord(selectionModel.getSelection()[0]);
    },
    //删除按钮
    onPurchaseDelBtnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("PurchaseGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条采购信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
        Ext.MessageBox.confirm("提示信息", "确定要删除吗？", function (btnId) {
            if (btnId == "yes") {
            	 Ext.Msg.wait('正在处理数据，请稍候...','提示');
                Ext.Ajax.request({
            		url:"purchase/delPurchase.do",
            		method:"POST",
            		params:data,
            		success:function(responst){
                	 	Ext.Msg.hide();
            			var result = JSON.parse(responst.responseText); 
            			if(result.success){
            				 Ext.Msg.show({
                  				title : '提示信息',
                  				msg :'删除成功!',
                  				buttons : Ext.Msg.OK,
                  				icon : Ext.MessageBox.INFO
                  			 });     
            				Ext.getCmp("PurchaseGridPanel").store.load();
            			}else{
            				 Ext.Msg.show({
                   				title : '提示信息',
                   				msg :'删除失败!',
                   				buttons : Ext.Msg.OK,
                   				icon : Ext.MessageBox.WARNING
                   			 });
            			}
            		},
        		    failure: function(from,action){
            			 Ext.Msg.hide();
            			 onActionFailureTypeShow(action);
            		},
            		scope:this
            	});
            }
        },this);
    },
    //导出按钮
    onPurchaseExcelBtnClick: function(button, e, eOpts) {
    	Ext.create("Purchase.view.PurchaseWindow",{title:'添加采购信息',icon:'img/add.png'}).show();
    },
    //高级查询按钮
    onPurchaseShowFormBtnClick: function(button, e, eOpts) {
    	var panel = Ext.getCmp("SearchForm");
        if(panel.isHidden()){
            panel.show();
        }else{
            panel.hide();
        }
    },
    //查询按钮
    onPurchaseSearchBtnClick: function(button, e, eOpts) {
    	var SearchForm = Ext.getCmp("SearchForm");
    	this.reloadPurchaseGridPanelStore(SearchForm.getValues(),'高级查询-物品采购');
    },
    //重置按钮
    onPurchaseResetBtnClick: function(button, e, eOpts) {
    	var SearchForm = Ext.getCmp("SearchForm");
    	SearchForm.getForm().reset();
    	this.reloadPurchaseGridPanelStore(null,'物品采购');
    },
    //刷新数据
    reloadPurchaseGridPanelStore:function(data,text){
    	var gridPanel=Ext.getCmp("PurchaseGridPanel");
    	gridPanel.store.setProxy({
    		type: 'ajax',
            url: 'purchase/getPurchasePage.do',
            extraParams:data,
            actionMethods: {
        		read: 'POST'
    		},
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json   
	            root: 'data',   
	            //获取数据总数 
	            totalProperty:'dataSize'
            }
    	});
    	gridPanel.store.load(); 
    	gridPanel.setTitle(text);
    },
    //保存按钮
    onPurchaseSaveBtnClick: function(button, e, eOpts) {
    	var formPanel = Ext.getCmp("purchaseForm");
	   	 if(!formPanel.isDirty()){
	   		 Ext.getCmp("PurchaseWindow").close();
	   		 return;
	   	 }
	   	 if(formPanel.isValid()){
	   		 Ext.MessageBox.confirm("提示信息", "确定要保存吗？", function (btnId) {
				if(btnId=='yes'){
					 formPanel.submit({
	    				 url:'purchase/addPurchase.do',
			             method:'POST',
			             waitTitle : "提示",
			             waitMsg: '正在提交数据，请稍后...',
			             params:formPanel.form.getValues(),
			             success: function(form, action){
			        	    var result = JSON.parse(action.response.responseText); 
			            	if(result.success){
			            		 Ext.Msg.show({title : '提示信息',msg :'操作成功!',buttons : Ext.Msg.OK,icon : Ext.MessageBox.INFO});
			            		 Ext.getCmp("PurchaseWindow").close();
								 Ext.getCmp("PurchaseGridPanel").store.load();
			            	}else{
			            		 Ext.Msg.show({title : '提示信息',msg :'操作失败!',buttons : Ext.Msg.OK,icon : Ext.MessageBox.INFO});
			            	}
			            },
			            failure: function(form, action){
			            	onActionFailureTypeShow(action);
			            },
			            scope:this
	    			 });
				}
			 },this);
	   }
    },
    //关闭按钮
    onPurchaseCloseBtnClick: function(button, e, eOpts) {
    	Ext.getCmp("PurchaseWindow").close();
    },
    //定时器,解决单击事件双击事件问题
    task:new Ext.util.DelayedTask(),
    //用户双击事件
    onPurchaseGridPanelCellDblClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	   Ext.create("Purchase.view.PurchaseWindow",{title:'修改采购信息',icon:'img/update.png'}).show();
  	   Ext.getCmp("purchaseForm").loadRecord(record);
    },
    //用户单击事件
    onPurchaseGridPanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.getCmp("purchaseAddBtn").enable(true);
    	Ext.getCmp("purchaseUpdateBtn").enable(true);
    	Ext.getCmp("purchaseDelBtn").enable(true);
    },
    //物品单价失去焦点事件
    onPurchasePriceTextfieldBlur: function(component, e, eOpts) {
    	var purchaseNumber = Ext.getCmp("purchaseNumber").value;
    	Ext.getCmp("purchaseTotalPrices").setValue(component.value*purchaseNumber);
    	Ext.getCmp("purchaseOnHand").setValue(purchaseNumber);
    	
    },
    //物品数量失去焦点事件
    onPurchaseNumberTextfieldBlur: function(component, e, eOpts) {
    	var purchasePrice = Ext.getCmp("purchasePrice").value;
    	Ext.getCmp("purchaseTotalPrices").setValue(component.value*purchasePrice);
    	Ext.getCmp("purchaseOnHand").setValue(component.value);
    },
    init: function(application) {
        this.control({
            "button[id=purchaseRefreshBtn]": {
                click: this.onPurchaseRefreshBtnClick
            },
            "button[id=purchaseAddBtn]": {
                click: this.onPurchaseAddBtnClick
            },
            "button[id=purchaseUpdateBtn]": {
                click: this.onPurchaseUpdateBtnClick
            },
            "button[id=purchaseDelBtn]": {
                click: this.onPurchaseDelBtnClick
            },
            "button[id=purchaseExcelBtn]": {
                click: this.onPurchaseExcelBtnClick
            },
            "button[id=purchaseShowFormBtn]": {
                click: this.onPurchaseShowFormBtnClick
            },
            "button[id=purchaseSearchBtn]": {
                click: this.onPurchaseSearchBtnClick
            },
            "button[id=purchaseResetBtn]": {
                click: this.onPurchaseResetBtnClick
            },
            "button[id=purchaseSaveBtn]": {
                click: this.onPurchaseSaveBtnClick
            },
            "button[id=purchaseCloseBtn]": {
                click: this.onPurchaseCloseBtnClick
            },
            "#PurchaseGridPanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    				this.task.delay(200,this.onPurchaseGridPanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		},
	    		celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	    			this.task.delay(200,this.onPurchaseGridPanelCellDblClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            "textfield[id=purchasePrice]": {
                blur: this.onPurchasePriceTextfieldBlur
            },
            "textfield[id=purchaseNumber]": {
                blur: this.onPurchaseNumberTextfieldBlur
            }
        });
    }

});
