/*
 * File: officeGoods/controller/OfficeGoodsController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('OfficeGoods.controller.OfficeGoodsController', {
    extend: 'Ext.app.Controller',

    //刷新按钮
    onOgsRefreshBtnClick: function(button, e, eOpts) {
		Ext.getCmp("OfficeGoodsGridPanel").store.load();	
    },
    //添加按钮
    onOgsAddBtnClick: function(button, e, eOpts) {
    	Ext.create("OfficeGoods.view.OfficeGoodsWindow",{title:'添加办公物品领用信息',icon:'img/add.png'}).show();
    },
    //修改按钮
    onOgsUpdateBtnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("OfficeGoodsGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        Ext.create("OfficeGoods.view.OfficeGoodsWindow",{title:'修改办公物品领用信息',icon:'img/update.png'}).show();
   	    Ext.getCmp("OfficeGoodsFormPanel").loadRecord(selectionModel.getSelection()[0]);
    },
    //删除按钮
    onOgsDelBtnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("OfficeGoodsGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
        Ext.MessageBox.confirm("提示信息", "确定要删除吗？", function (btnId) {
            if (btnId == "yes") {
            	 Ext.Msg.wait('正在处理数据，请稍候...','提示');
                Ext.Ajax.request({
            		url:"ogs/delOfficeGoods.do",
            		method:"POST",
            		params:data,
            		success:function(responst){
                	 	Ext.Msg.hide();
            			var result = JSON.parse(responst.responseText); 
            			if(result.success){
            				 Ext.Msg.show({
                  				title : '提示信息',
                  				msg :'删除成功!',
                  				buttons : Ext.Msg.OK,
                  				icon : Ext.MessageBox.INFO
                  			 });     
            				Ext.getCmp("OfficeGoodsGridPanel").store.load();
            			}else{
            				 Ext.Msg.show({
                   				title : '提示信息',
                   				msg :'删除失败!',
                   				buttons : Ext.Msg.OK,
                   				icon : Ext.MessageBox.WARNING
                   			 });
            			}
            		},
        		    failure: function(from,action){
            			 Ext.Msg.hide();
            			 onActionFailureTypeShow(action);
            		},
            		scope:this
            	});
            }
        },this);
    },
    //导出按钮
    onOgsExportBtnClick: function(button, e, eOpts) {

    },
    //高级查询按钮
    onOgsSearchFormBtnClick: function(button, e, eOpts) {
    	var panel = Ext.getCmp("SearchForm");
        if(panel.isHidden()){
            panel.show();
        }else{
            panel.hide();
        }
    },
    //查询按钮
    onOgsSearchBtnClick: function(button, e, eOpts) {
    	var searchForm = Ext.getCmp("SearchForm");
    	this.reloadOfficeGoodsGridPanelStore(searchForm.getValues(),'高级查询-办公物品领用');
    },
    //重置按钮
    onOgsResetBtnClick: function(button, e, eOpts) {
    	Ext.getCmp("SearchForm").getForm().reset();
    	this.reloadOfficeGoodsGridPanelStore(null,'办公物品领用');
    },
    //刷新数据
    reloadOfficeGoodsGridPanelStore:function(data,text){
    	var gridPanel=Ext.getCmp("OfficeGoodsGridPanel");
    	gridPanel.store.setProxy({
    		type: 'ajax',
            url: 'ogs/getOfficeGoodsPage.do',
            extraParams:data,
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json   
	            root: 'data',   
	            //获取数据总数 
	            totalProperty:'dataSize'
            }
    	});
    	gridPanel.store.load(); 
    	gridPanel.setTitle(text);
    },
    //保存按钮
    onOgsSaveBtnClick: function(button, e, eOpts) {
    	var formPanel = Ext.getCmp("OfficeGoodsFormPanel");
	   	 if(!formPanel.isDirty()){
	   		 Ext.getCmp("OfficeGoodsWindow").close();
	   		 return;
	   	 }
	   	 if(formPanel.isValid()){
	   		 Ext.MessageBox.confirm("提示信息", "确定要保存吗？", function (btnId) {
				if(btnId=='yes'){
					 formPanel.submit({
	    				 url:'ogs/addOfficeGoods.do',
			             method:'POST',
			             waitTitle : "提示",
			             waitMsg: '正在提交数据，请稍后...',
			             params:formPanel.form.getValues(),
			             success: function(form, action){
			        	    var result = JSON.parse(action.response.responseText); 
			            	if(result.success){
			            		 Ext.Msg.show({title : '提示信息',msg :'操作成功!',buttons : Ext.Msg.OK,icon : Ext.MessageBox.INFO});
			            		 Ext.getCmp("OfficeGoodsWindow").close();
								 Ext.getCmp("OfficeGoodsGridPanel").store.load();
			            	}else{
			            		 Ext.Msg.show({title : '提示信息',msg :'操作失败!',buttons : Ext.Msg.OK,icon : Ext.MessageBox.INFO});
			            	}
			            },
			            failure: function(form, action){
			            	onActionFailureTypeShow(action);
			            },
			            scope:this
	    			 });
				}
			 },this);
	   }
    },
    //关闭按钮
    onOgsCloseBtnClick: function(button, e, eOpts) {
    	Ext.getCmp("OfficeGoodsWindow").close();
    },
    //定时器,解决单击事件双击事件问题
    task:new Ext.util.DelayedTask(),
    //用户双击事件
    onOfficeGoodsGridPanelCellDblClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.create("OfficeGoods.view.OfficeGoodsWindow",{title:'修改办公物品领用信息',icon:'img/update.png'}).show();
    	Ext.getCmp("OfficeGoodsFormPanel").loadRecord(record);
    },
    //用户单击事件
    onOfficeGoodsGridPanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.getCmp("ogsDelBtn").enable(true);
    	Ext.getCmp("ogsUpdateBtn").enable(true);
    	if (e.getTarget().innerHTML === '查看'||e.getTarget().innerHTML === '下载' ){
			this.showFileHref(record.data);
		}
    },
   //点击超链接查看附件
	showFileHref(data){
		if(data.ogsFileType.indexOf('image')>-1){
	    	Ext.create("OfficeGoods.view.ShowWindow",{title:'在线查看'}).show();
	    	Ext.getCmp("pic").setSrc(extBasePath+"ogs/showOfficeGoods.do?ogsUuid="+data.ogsUuid+"&time="+new Date().getTime());
	    }else{
	    	window.location.href=extBasePath+"ogs/showOfficeGoods.do?ogsUuid="+data.ogsUuid+"&time="+new Date().getTime();
	    }
	},
  //员工编号失去焦点事件，判断是否存在该编号人员员工
    onOgsUserNumberBlur: function(component, e, eOpts) {
    	if(component.readOnly){
    		return;
    	}
    	if(null==component.value||""==component.value){
    		return;
    	}
    	var hiddenValue=Ext.getCmp("loggingUserNumber_hidden").value;
    	if(component.value==hiddenValue){
    		return;
    	}
    	Ext.Msg.wait('正在查找人员信息，请稍候...','提示');
    	Ext.Ajax.request({
    		url:"user/validateUserNumber.do",
     		method:"POST",
     		params:{
        	 	'userNumber':component.value
         	},
     		success:function(responst){
         		Ext.Msg.hide();
     			var result = JSON.parse(responst.responseText); 
     			if(result.success){
     				if(result.data.userState==2){
     					var msg='该员工已离职';
     					Ext.Msg.show({
            				title : '提示信息',
            				msg : msg,
            				buttons : Ext.Msg.OK,
            				icon : Ext.MessageBox.WARNING
            			 });
         				component.setValue("");
         				Ext.getCmp("loggingUserNumber_hidden").setValue("");
     				}else{
     					Ext.getCmp("ogsUserUuid").setValue(result.data.userUuid);//用户性别
     					Ext.getCmp("ogsUserName").setValue(result.data.userName);//用户名称
     					Ext.getCmp("loggingUserNumber_hidden").setValue(component.value);
     				}
     			}else{
     				var msg='没有找到该员工，请重新选择';
     				Ext.Msg.show({
        				title : '提示信息',
        				msg : msg,
        				buttons : Ext.Msg.OK,
        				icon : Ext.MessageBox.WARNING
        			 });
     				component.setValue("");
     				Ext.getCmp("loggingUserNumber_hidden").setValue("");
     				Ext.getCmp("ogsUserUuid").setValue("");//用户性别
 					Ext.getCmp("ogsUserName").setValue("");//用户名称
     			}
     		},
 		    failure: function(from,action){
     			 Ext.Msg.hide();
     			 Ext.getCmp("loggingUserNumber_hidden").setValue("");
     			 Ext.getCmp("ogsUserUuid").setValue("");//用户性别
				 Ext.getCmp("ogsUserName").setValue("");//用户名称
     			 onActionFailureTypeShow(action);
     		},
     		scope:this
    	});
    },
    //选择员工按钮
    onOfficeGoodsUserChoseBtnClick:function(button, e, eOpts) {
    	Ext.create("OfficeGoods.view.LoggingUserWindow",{"title":"双击选择员工","icon":"img/search.png"}).show();
    },
  //选择人员-刷新按钮
    onLoggingUserRefreshBtnClick:function(button, e, eOpts) {
    	this.reloadOrgGridPanelStore({'orgUuid':null},"-员工信息列表");
    },
   //选择人员-关闭按钮
    onLoggingUserCloseBtnClick:function(button, e, eOpts) {
    	Ext.getCmp("LoggingUserWindow").close();
    },
   //选择人员-保存按钮
    onLoggingUserSureBtnClick:function(button, e, eOpts) {
    	var gridPanel=Ext.getCmp("LoggingUserGridPanel");
    	var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
        	 Ext.Msg.show({
      				title : '提示信息',
      				msg :'请选择一条人员信息',
      				buttons : Ext.Msg.OK,
      				icon : Ext.MessageBox.WARNING
      			});
             return;
         }
        var data = selectionModel.getSelection()[0].data;
        Ext.getCmp("ogsUserNumber").setValue(data.userNumber);
        Ext.getCmp("loggingUserNumber_hidden").setValue(data.userNumber);
        Ext.getCmp("ogsUserUuid").setValue(data.userUuid);//用户性别
	    Ext.getCmp("ogsUserName").setValue(data.userName);//用户名称
        Ext.getCmp("LoggingUserWindow").close();
    },
    //组织机构单击事件
    onOrgTreePanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	this.reloadOrgGridPanelStore({'orgUuid':record.data.id},record.data.text+"-员工信息列表");
    },
    //刷新人员数据
    reloadOrgGridPanelStore:function(data,text){
    	var gridPanel=Ext.getCmp("LoggingUserGridPanel");
    	gridPanel.store.setProxy({
	 		url:'user/getUserPage.do',
            type: 'ajax',
            extraParams:data,
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json   
	            root: 'data',   
	            //获取数据总数 
	            totalProperty:'dataSize'
            }
    	});
    	gridPanel.store.load(); 
    	gridPanel.setTitle(text);
    },
    //人员表单单击事件
    onLoggingUserGridPanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.getCmp("LoggingUserSureBtn").setDisabled(false);//保存按钮
    },
    //人员表单双击事件
    onLoggingUserGridPanelDblClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	 var data = record.data;
    	 Ext.getCmp("ogsUserNumber").setValue(data.userNumber);
         Ext.getCmp("loggingUserNumber_hidden").setValue(data.userNumber);
         Ext.getCmp("ogsUserUuid").setValue(data.userUuid);//用户性别
 	     Ext.getCmp("ogsUserName").setValue(data.userName);//用户名称
         Ext.getCmp("LoggingUserWindow").close();
    },
    //选择办公物品
    onOfficeGoodsChoseBtnClick:function(button, e, eOpts) {
    	Ext.create("OfficeGoods.view.PurchaseWindow",{"title":"双击选择领取物品","icon":"img/search.png"}).show();
    },
    //高级查询按钮
    onPurchaseShowFormBtnClick: function(button, e, eOpts) {
    	var panel = Ext.getCmp("OfficeGoodsPurchaseSearchForm");
        if(panel.isHidden()){
            panel.show();
        }else{
            panel.hide();
        }
    },
    //查询按钮
    onPurchaseSearchBtnClick: function(button, e, eOpts) {
    	var SearchForm = Ext.getCmp("OfficeGoodsPurchaseSearchForm");
    	this.reloadPurchaseGridPanelStore(SearchForm.getValues(),'高级查询-物品采购');
    },
    //重置按钮
    onPurchaseResetBtnClick: function(button, e, eOpts) {
    	var SearchForm = Ext.getCmp("OfficeGoodsPurchaseSearchForm");
    	SearchForm.getForm().reset();
    	this.reloadPurchaseGridPanelStore(null,'物品采购');
    },
    //刷新数据
    reloadPurchaseGridPanelStore:function(data,text){
    	var gridPanel=Ext.getCmp("PurchaseGridPanel");
    	gridPanel.store.setProxy({
    		type: 'ajax',
            url: 'purchase/getPurchasePage.do',
            extraParams:data,
            actionMethods: {
        		read: 'POST'
    		},
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json   
	            root: 'data',   
	            //获取数据总数 
	            totalProperty:'dataSize'
            }
    	});
    	gridPanel.store.load(); 
    	gridPanel.setTitle(text);
    },
    //刷新
    onPurchaseRefreshBtnClick: function(button, e, eOpts) {
		Ext.getCmp("PurchaseGridPanel").store.reload();
    },
    //确定
    onPurchaseSureBtnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("PurchaseGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
    	
    	Ext.getCmp("ogsType").setValue(data.purchaseUuid);
    	Ext.getCmp("ogsTypeText").setValue(data.purchaseName);
    	Ext.getCmp("PurchaseWindow").close();
    },
    //关闭
    onPurchaseCloseBtnClick: function(button, e, eOpts) {
		Ext.getCmp("PurchaseWindow").close();
    },
    //用户双击事件
    onPurchaseGridPanelCellDblClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	var data = record.data;
    	Ext.getCmp("ogsType").setValue(data.purchaseUuid);
    	Ext.getCmp("ogsTypeText").setValue(data.purchaseName);
    	Ext.getCmp("PurchaseWindow").close();
    },
    //用户单击事件
    onPurchaseGridPanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.getCmp("purchaseSureBtn").enable(true);
    },
    //查看附件
    onOgsShowBtnClick:function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("OfficeGoodsGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
        if(data.ogsFileSize==0||data.ogsFileSize==null){
        	 Ext.Msg.show({
  				title : '提示信息',
  				msg :'不存在附件信息',
  				buttons : Ext.Msg.OK,
  				icon : Ext.MessageBox.WARNING
  			});
        	return;
        }
        if(data.ogsFileType.indexOf('image')>-1){
        	Ext.create("OfficeGoods.view.ShowWindow",{title:'在线查看'}).show();
        	Ext.getCmp("pic").setSrc(extBasePath+"ogs/showOfficeGoods.do?ogsUuid="+data.ogsUuid+"&time="+new Date().getTime());
        }else{
        	window.location.href=extBasePath+"ogs/showOfficeGoods.do?ogsUuid="+data.ogsUuid+"&time="+new Date().getTime();
        }
    },
    //导出按钮
    onExportBtnClick:function(button, e, eOpts) {
        window.location.href=Ext.getCmp("pic").src;
    },
    //关闭查看
    onCloseShowWindowBtnClick:function(button, e, eOpts) {
    	Ext.getCmp("ShowWindow").close();
    },
    init: function(application) {
        this.control({
            "button[id=ogsRefreshBtn]": {
                click: this.onOgsRefreshBtnClick
            },
            "button[id=ogsAddBtn]": {
                click: this.onOgsAddBtnClick
            },
            "button[id=ogsUpdateBtn]": {
                click: this.onOgsUpdateBtnClick
            },
            "button[id=ogsDelBtn]": {
                click: this.onOgsDelBtnClick
            },
            "button[id=ogsExportBtn]": {
                click: this.onOgsExportBtnClick
            },
            "button[id=ogsSearchFormBtn]": {
                click: this.onOgsSearchFormBtnClick
            },
            "button[id=ogsSearchBtn]": {
                click: this.onOgsSearchBtnClick
            },
            "button[id=ogsResetBtn]": {
                click: this.onOgsResetBtnClick
            },
            "button[id=ogsSaveBtn]": {
                click: this.onOgsSaveBtnClick
            },
            "button[id=ogsCloseBtn]": {
                click: this.onOgsCloseBtnClick
            },
            "#OfficeGoodsGridPanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    				this.task.delay(200,this.onOfficeGoodsGridPanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		},
	    		celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	    			this.task.delay(200,this.onOfficeGoodsGridPanelCellDblClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            'textfield[id=ogsUserNumber]':{
           	 	blur: this.onOgsUserNumberBlur
            },
            "button[id=OfficeGoodsUserChoseBtn]": {
                click: this.onOfficeGoodsUserChoseBtnClick
            },
            "button[id=LoggingUserRefreshBtn]":{
            	click:this.onLoggingUserRefreshBtnClick
            },
            "button[id=LoggingUserSureBtn]":{
            	click:this.onLoggingUserSureBtnClick
            },
            "button[id=LoggingUserCloseBtn]":{
            	click:this.onLoggingUserCloseBtnClick
            },
            "#OrgTreePanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
					this.task.delay(200,this.onOrgTreePanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            "#LoggingUserGridPanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
					this.task.delay(200,this.onLoggingUserGridPanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		},
	    		celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	    			this.task.delay(200,this.onLoggingUserGridPanelDblClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            "button[id=OfficeGoodsChoseBtn]":{
            	click:this.onOfficeGoodsChoseBtnClick
            },
            "button[id=purchaseShowFormBtn]": {
                click: this.onPurchaseShowFormBtnClick
            },
            "button[id=purchaseSearchBtn]": {
                click: this.onPurchaseSearchBtnClick
            },
            "button[id=purchaseResetBtn]": {
                click: this.onPurchaseResetBtnClick
            },
            "button[id=purchaseRefreshBtn]": {
                click: this.onPurchaseRefreshBtnClick
            },
            "button[id=purchaseSureBtn]": {
                click: this.onPurchaseSureBtnClick
            },
            "button[id=purchaseCloseBtn]": {
                click: this.onPurchaseCloseBtnClick
            },
            "#PurchaseGridPanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    				this.task.delay(200,this.onPurchaseGridPanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		},
	    		celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	    			this.task.delay(200,this.onPurchaseGridPanelCellDblClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            "button[id=ogsShowBtn]": {
                click: this.onOgsShowBtnClick
            },
            'button[id=exportBtn]':{
            	click:this.onExportBtnClick
            },
            'button[id=closeShowWindowBtn]':{
            	click:this.onCloseShowWindowBtnClick
            }
           
        });
    }

});
