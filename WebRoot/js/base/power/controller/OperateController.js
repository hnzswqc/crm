/*
 * File: power/controller/OperateController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Power.controller.OperateController', {
    extend: 'Ext.app.Controller',

    id: 'OperateController',
    models: [
        'OperateModel'
    ],
    stores: [
        'OperateGridPanelStore'
    ],
    views: [
        'PowerOperateWindow',
        'OperateWindow'
    ],
    //刷新按钮
    onOperate_refresh_btnClick: function(button, e, eOpts) {
        Ext.getCmp("operateGridPanel").store.load();
    },
    //添加按钮
    onOperate_add_btnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("PowerGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'没有获取到您要添加的功能链接信息。',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
        Ext.create("Power.view.OperateWindow",{title:'添加操作功能',icon:'img/add.png'}).show();
        Ext.getCmp("powerUuid").setValue(data.powerUuid);
        
    },
    //保存按钮
    onOperate_save_btnClick: function(button, e, eOpts) {
    	 var formPanel =  Ext.getCmp("operateForm").getForm();
    	 if(!formPanel.isDirty()){
    		 Ext.getCmp("OperateWindow").close();
     		 return;
    	 }
    	 if(formPanel.isValid()){
    		 Ext.MessageBox.confirm("提示信息", "确定要保存吗？", function (btnId) {
     			if(btnId=='yes'){
     				 formPanel.submit({
         				 url:'operate/addOperate.do',
     		             method:'POST',
     		             waitTitle : "提示",
     		             waitMsg: '正在提交数据，请稍后...',
     		             success: function(form, action){
     		        	    var result = JSON.parse(action.response.responseText); 
     		            	if(result.success){
     		            		 Ext.Msg.show({title : '提示信息',msg :'保存成功!',buttons : Ext.Msg.OK,icon : Ext.MessageBox.INFO});
     		            		 Ext.getCmp("OperateWindow").close();
     		            		 Ext.getCmp("operateGridPanel").store.load();
     		            	}else{
     		            		 Ext.Msg.show({title : '提示信息',msg :'保存失败!',buttons : Ext.Msg.OK,icon : Ext.MessageBox.INFO});
     		            	}
     		            },
     		            failure: function(form, action){
     		            	onActionFailureTypeShow(action);
     		            },
     		            scope:this
         			 });
     			}
     		 },this);
	 	}
    },
    //关闭按钮
    onOperate_close_btnClick: function(button, e, eOpts) {
    	Ext.getCmp("OperateWindow").close();
    },
    //关闭按钮
    onOperate_close_gridPanel_btnClick: function(button, e, eOpts) {
    	Ext.getCmp("PowerOperateWindow").close();
    },
    //修改按钮
    onOperate_upd_btnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("operateGridPanel");
	    var selectionModel = gridPanel.getSelectionModel();
	    if(selectionModel.getCount()<=0){
	        Ext.Msg.show({
				title : '提示信息',
				msg :'请先选择一条操作功能信息!',
				buttons : Ext.Msg.OK,
				icon : Ext.MessageBox.WARNING
			});
	        return;
	    }
	    Ext.create("Power.view.OperateWindow",{title:'修改操作功能',icon:'img/update.png'}).show();
	    Ext.getCmp("operateForm").loadRecord(selectionModel.getSelection()[0]);
    },
    //定时器,解决单击事件双击事件问题
    task:new Ext.util.DelayedTask(),
    //双击事件
    onOperateGridPanelCellDblClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.create("Power.view.OperateWindow",{title:'修改操作功能',icon:'img/update.png'}).show();
	    Ext.getCmp("operateForm").loadRecord(record);
    },
    //单击事件
    onOperateGridPanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	if(Ext.getCmp("Operate_upd_btn")){
    		Ext.getCmp("Operate_upd_btn").enable(true);
    	}
    	if(Ext.getCmp("Operate_del_btn")){
    		Ext.getCmp("Operate_del_btn").enable(true);
    	}
    },
    //删除按钮
    onOperate_del_btnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("operateGridPanel");
	    var selectionModel = gridPanel.getSelectionModel();
	    if(selectionModel.getCount()<=0){
	        Ext.Msg.show({
				title : '提示信息',
				msg :'请先选择一条操作功能信息!',
				buttons : Ext.Msg.OK,
				icon : Ext.MessageBox.WARNING
			});
	        return;
	    }
	    var data = selectionModel.getSelection()[0].data;
        Ext.MessageBox.confirm("提示信息", "确定要删除吗？", function (btnId) {
            if (btnId == "yes") {
            	Ext.Msg.wait('正在处理数据，请稍候...','提示');
                Ext.Ajax.request({
            		url:"operate/delOperate.do",
            		method:"POST",
            		params:data,
            		success:function(responst){
                		Ext.Msg.hide();
            			var result = JSON.parse(responst.responseText); 
            			if(result.success){
            				 Ext.Msg.show({
                  				title : '提示信息',
                  				msg :'删除成功!',
                  				buttons : Ext.Msg.OK,
                  				icon : Ext.MessageBox.INFO
                  			 });     
            				 Ext.getCmp("operateGridPanel").store.load();
            			}else{
            				 Ext.Msg.show({
                   				title : '提示信息',
                   				msg :'删除失败!',
                   				buttons : Ext.Msg.OK,
                   				icon : Ext.MessageBox.INFO
                   			 });     
            			}
            		},
        		    failure: function(from,action){
            			Ext.Msg.hide();
            			onActionFailureTypeShow(action);
            		},
            		scope:this
            	});
            }
        },this);
    },
    //标识名验证
    onOperateKeyTextfieldBlur: function(component, e, eOpts) {
    	if(component.originalValue == component.value){
    		return;
    	}
    	Ext.Ajax.request({
    		url:"operate/validateOperateKey.do",
     		method:"POST",
     		params:{
        	 	'operateKey':component.value
         	},
     		success:function(responst){
     			var result = JSON.parse(responst.responseText); 
     			if(result.success){
     				Ext.Msg.show({
        				title : '提示信息',
        				msg : '该标识已经存在，请重新输入！',
        				buttons : Ext.Msg.OK,
        				icon : Ext.MessageBox.WARNING
        			 });
     				component.focus();
     				component.setValue("");
     			}
     		},
 		    failure: function(from,action){
     			onActionFailureTypeShow(action);
     		},
     		scope:this
    	});
    },
    init: function(application) {
        this.control({
            "button[id=Operate_refresh_btn]": {
                click: this.onOperate_refresh_btnClick
            },
            "button[id=Operate_add_btn]": {
                click: this.onOperate_add_btnClick
            },
            "button[id=Operate_upd_btn]":{
            	click:this.onOperate_upd_btnClick
            },
            "button[id=Operate_save_btn]":{
            	click: this.onOperate_save_btnClick
            },
            "button[id=Operate_close_btn]":{
            	click: this.onOperate_close_btnClick
            },
            "button[id=Operate_del_btn]":{
            	click: this.onOperate_del_btnClick
            },
            "button[id=Operate_close_gridPanel_btn]":{
            	click: this.onOperate_close_gridPanel_btnClick
            },
            "textfield[id=operateKey]": {
               // blur: this.onOperateKeyTextfieldBlur
            },
            "#operateGridPanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
					this.task.delay(200,this.onOperateGridPanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		},
	    		celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	    			this.task.delay(200,this.onOperateGridPanelCellDblClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            }
        });
    }

});
