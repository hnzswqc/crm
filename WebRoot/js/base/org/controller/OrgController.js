/*
 * File: org/controller/OrgController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Org.controller.OrgController', {
    extend: 'Ext.app.Controller',

    id: 'OrgController',
    models: [
        'OrgTreeNode',
        'OrgModel'
    ],
    stores: [
        'OrgTreeNodeStore',
        'OrgStore',
        'OrgRoleStore'
    ],
    views: [
        'OrgViewport'
    ],
    //刷新按钮
    onOrg_refresh_btnClick: function(button, e, eOpts) {
		Ext.getCmp("OrgTreePanel").store.load();
		this.reloadGridPanelStore("","组织机构");
    },
    //添加按钮
    onOrg_add_btnClick: function(button, e, eOpts) {
    	Ext.create("Org.view.OrgWindow",{title:'添加组织机构',icon:'img/add.png'}).show();
    	var gridPanel = Ext.getCmp("OrgTreePanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()>0){
        	Ext.getCmp("orgParentUuid").setValue(selectionModel.getSelection()[0].data.id);
        }
    },
    //保存按钮
    onOrg_save_btnClick: function(button, e, eOpts) {
    	 var formPanel =  Ext.getCmp("addOrgForm").getForm();
    	 if(!formPanel.isDirty()){
    		 Ext.getCmp("OrgWindow").close();
     		 return;
    	 }
    	 if(formPanel.isValid()){
    		 Ext.MessageBox.confirm("提示信息", "确定要保存吗？", function (btnId) {
     			if(btnId=='yes'){
     				 formPanel.submit({
         				 url:'org/addOrg.do',
     		             method:'POST',
     		             waitTitle : "提示",
     		             waitMsg: '正在提交数据，请稍后...',
     		             success: function(form, action){
     		        	    var result = JSON.parse(action.response.responseText); 
     		            	if(result.success){
     		            		 Ext.Msg.show({title : '提示信息',msg :'操作成功!',buttons : Ext.Msg.OK,icon : Ext.MessageBox.INFO});
     		            		 Ext.getCmp("OrgWindow").close();
     		            		 this.onOrg_refresh_btnClick();
     		            	}else{
     		            		 Ext.Msg.show({title : '提示信息',msg :'操作失败!',buttons : Ext.Msg.OK,icon : Ext.MessageBox.INFO});
     		            	}
     		            },
     		            failure: function(form, action){
     		            	onActionFailureTypeShow(action);
     		            },
     		            scope:this
         			 });
     			}
     		 },this);
	 	}
    	
    },
    //关闭按钮
    onOrg_close_btnClick: function(button, e, eOpts) {
    	Ext.getCmp("OrgWindow").close();
    },
    //删除按钮
    onOrg_del_btnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("OrgGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条组织机构信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
        if(data.child>0){
        	Ext.Msg.show({
 				title : '提示信息',
 				msg :'当前组织存在子级组织，不允许删除',
 				buttons : Ext.Msg.OK,
 				icon : Ext.MessageBox.WARNING
 			});
        	return;
        }
        Ext.MessageBox.confirm("提示信息", "确定要删除吗？", function (btnId) {
            if (btnId == "yes") {
            	Ext.Msg.wait('正在处理数据，请稍候...','提示');
                Ext.Ajax.request({
            		url:"org/delOrg.do",
            		method:"POST",
            		params:data,
            		success:function(responst){
                	Ext.Msg.hide();
            			var result = JSON.parse(responst.responseText); 
            			if(result.success){
            				 Ext.Msg.show({
                  				title : '提示信息',
                  				msg :'删除成功!',
                  				buttons : Ext.Msg.OK,
                  				icon : Ext.MessageBox.INFO
                  			 });     
            				this.onOrg_refresh_btnClick();
            			}else{
            				 Ext.Msg.show({
                   				title : '提示信息',
                   				msg :'删除失败!',
                   				buttons : Ext.Msg.OK,
                   				icon : Ext.MessageBox.INFO
                   			 });     
            			}
            		},
        		    failure: function(from,action){
            			onActionFailureTypeShow(action);
            		},
            		scope:this
            	});
            }
        },this);
    },
   //修改按钮
    onOrg_upd_btnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("OrgGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条组织机构信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        Ext.create("Org.view.OrgWindow",{title:'修改组织机构',icon:'img/update.png'}).show();
        var formPanel = Ext.getCmp("addOrgForm").getForm();
        formPanel.loadRecord(selectionModel.getSelection()[0]);
    },
   //父级菜单选择事件
    onOrgParentUuidSelect:function(combobox,record,eOpts){
    	var orgUuid = Ext.getCmp("orgUuid").getValue();
    	if(null!=orgUuid){
    		if(orgUuid==record.data.id){
    			Ext.Msg.show({
    				title : '提示信息',
    				msg :'不能选择当前功能链接作为父级菜单!',
    				buttons : Ext.Msg.OK,
    				icon : Ext.MessageBox.WARNING
    			 });
    			combobox.setValue(DEFAULT_ROOT_UUID);
    		}
    	}
    },
    //审计事项单击选择事件
    onOrgTreePanelItemClick: function(dataview, record, item, index, e, eOpts) {
    	this.reloadGridPanelStore(record.data.id,record.data.text+"-组织机构");
    },
    //加载数据信息
    reloadGridPanelStore:function(orgParentUuid,title){
    	var gridPanel = Ext.getCmp("OrgGridPanel");
    	gridPanel.store.setProxy({
    		 	url:'org/getOrgPage.do',
                type: 'ajax',
                extraParams:{
		    		 'orgParentUuid':orgParentUuid
   		 		},
                reader: {
        			type: 'json',
		   	  	 	//数据格式为json   
		            root: 'data',   
		            //获取数据总数 
		            totalProperty:'dataSize'
                }
		 }); 
    	gridPanel.store.load(); 
    	gridPanel.setTitle(title);
    },
    //定时器,解决单击事件双击事件问题
    task:new Ext.util.DelayedTask(),
    //双击事件
    onOrgGridPanelCellDblClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.create("Org.view.OrgWindow",{title:'修改组织机构',icon:'img/update.png'}).show();
    	Ext.getCmp("addOrgForm").getForm().loadRecord(record);
    },
    //单击事件
    onOrgGridPanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.getCmp("Org_upd_btn").enable(true);
    	if(record.data.child<=0){
    		Ext.getCmp("Org_del_btn").enable(true);
    	}else{
    		Ext.getCmp("Org_del_btn").setDisabled(true);
    	}
    	Ext.getCmp("Org_role_btn").enable(true);
    	
    },
    //折叠按钮
    onOrg_folding_btnClick: function(button, e, eOpts) {
    	Ext.getCmp("OrgTreePanel").collapseAll();
    },
    //展开按钮
    onOrg_expand_btnClick: function(button, e, eOpts) {
    	Ext.getCmp("OrgTreePanel").expandAll();
    },
    //设置部门职务信息
    onOrg_role_btnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("OrgGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条组织机构信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
    	Ext.create("Org.view.RoleWindow",{"title":"为"+data.orgName+"设置职务","icon":"img/subsystem.png"}).show();
    	//加载数据
    	this.loadOrgRoleGridPanelStore('org/getRoleList.do',{'orgUuid':data.orgUuid});
    },
    //加载人员/组织角色数据
    loadOrgRoleGridPanelStore:function(url,data){
    	var gridPanel = Ext.getCmp("RoleGridPanel");
    	gridPanel.store.setProxy({
      		 url:url,
             autoLoad:true,
             extraParams : data,
             type: 'ajax',
             clearOnLoad: true,
             reader: {
	        	type: 'json',
	        	root: 'data'
             }
    	});
    	gridPanel.store.load(function(records, operation, success) {  
    		//默认选中状态
    		Ext.each(records,function(record,i){
    			if(record.data.count>0){
    				gridPanel.getSelectionModel().select(record,true,false)
    			}
    		})
    	},this);
    },
    onOrgSaveBtnClick:function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("RoleGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        var roleUuids="";//选择的角色
    	Ext.each(selectionModel.getSelection(),function(record,i){
    		if(i>0){
    			roleUuids+=",";
    		}
    		roleUuids+=record.data.roleUuid;
    	});
    	var gridPanel = Ext.getCmp("OrgGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        var orgUuid = selectionModel.getSelection()[0].data.orgUuid;//当前部门Uuid
        var params = {'roleUuids':roleUuids,'orgUuid':orgUuid};
        Ext.MessageBox.confirm("提示信息", "确定要保存吗？", function (btnId) {
            if (btnId == "yes") {
           	 Ext.Msg.wait('正在处理数据，请稍候...','提示');
                Ext.Ajax.request({
            		url:"org/saveOrgRole.do",
            		method:"POST",
            		params:params,
            		success:function(responst){
                		Ext.Msg.hide();
            			var result = JSON.parse(responst.responseText); 
            			if(result.success){
            				 Ext.Msg.show({
                  				title : '提示信息',
                  				msg :'保存成功!',
                  				buttons : Ext.Msg.OK,
                  				icon : Ext.MessageBox.INFO
                  			 });
            				 Ext.getCmp("RoleWindow").close();
            			}else{
            				 Ext.Msg.show({
                   				title : '提示信息',
                   				msg :'保存失败!',
                   				buttons : Ext.Msg.OK,
                   				icon : Ext.MessageBox.WARNING
                   			 });
            			}
            		},
        		    failure: function(from,action){
            			 Ext.Msg.hide();
            			 onActionFailureTypeShow(action);
            		},
            		scope:this
            	});
            }
        },this);
    },
    //关闭窗口
    onOrgCloseBtnClick:function(button, e, eOpts) {
    	Ext.getCmp("RoleWindow").close();
    },
    init: function(application) {
        this.control({
            "button[id=Org_refresh_btn]": {
                click: this.onOrg_refresh_btnClick
            },
            "button[id=Org_add_btn]":{
            	click:this.onOrg_add_btnClick
            },
            "button[id=Org_close_btn]":{
            	click:this.onOrg_close_btnClick
            },
            "button[id=Org_save_btn]":{
            	click:this.onOrg_save_btnClick
            },
            "button[id=Org_del_btn]":{
            	click:this.onOrg_del_btnClick
            },
            "button[id=Org_upd_btn]":{
            	click:this.onOrg_upd_btnClick
            },
            "button[id=Org_folding_btn]":{
            	click:this.onOrg_folding_btnClick
            },
            "button[id=Org_expand_btn]":{
            	click:this.onOrg_expand_btnClick
            },
            "#orgParentUuid":{
            	select:this.onOrgParentUuidSelect
            },
            "#OrgTreePanel":{
            	itemclick:this.onOrgTreePanelItemClick
            },
            "#OrgGridPanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    				this.task.delay(200,this.onOrgGridPanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		},
	    		celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	    			this.task.delay(200,this.onOrgGridPanelCellDblClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            "button[id=Org_role_btn]":{
            	click:this.onOrg_role_btnClick
            },
            "button[id=OrgSaveBtn]":{
            	click:this.onOrgSaveBtnClick
            },
            "button[id=OrgCloseBtn]":{
            	click:this.onOrgCloseBtnClick
            }
            
            
        });
    }

});
