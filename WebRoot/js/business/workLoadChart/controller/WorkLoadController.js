/*
 * File: workLoadChart/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('WorkLoadChart.controller.WorkLoadController', {
    extend: 'Ext.app.Controller',
    //刷新按钮
    onRefreshBtnClick:function(button, e, eOpts) {
		Ext.getCmp("ZgListChart").store.removeAll();
		Ext.getCmp("BzListChart").store.removeAll();
		Ext.getCmp("PgListChart").store.removeAll();
		Ext.getCmp("TgListChart").store.removeAll();
		Ext.getCmp("ZgListChart").store.load()
		Ext.getCmp("BzListChart").store.load()
		Ext.getCmp("PgListChart").store.load()
		Ext.getCmp("TgListChart").store.load()
	},
    //年度查询
    onYearSearchBtnClick: function(button, e, eOpts) {
		var panel = Ext.getCmp("YearSearchForm");
	    if(panel.isHidden()){
	        panel.show();
	        panel.getForm().reset();//重置表单
	    }else{
	        panel.hide();
	    }
	    Ext.getCmp("MonthSearchForm").hide();
	    Ext.getCmp("DateSearchForm").hide();
	    Ext.getCmp("NormalSearchForm").hide();
    },
    //月度查询
    onMonthSearchBtnClick: function(button, e, eOpts) {
		var panel = Ext.getCmp("MonthSearchForm");
	    if(panel.isHidden()){
	        panel.show();
	        panel.getForm().reset();//重置表单
	    }else{
	        panel.hide();
	    }
	    Ext.getCmp("YearSearchForm").hide();
	    Ext.getCmp("DateSearchForm").hide();
	    Ext.getCmp("NormalSearchForm").hide();
    },
    //按照日期查询
    onDateSearchBtnClick: function(button, e, eOpts) {
		var panel = Ext.getCmp("DateSearchForm");
	    if(panel.isHidden()){
	        panel.show();
	        panel.getForm().reset();//重置表单
	    }else{
	        panel.hide();
	    }
	    Ext.getCmp("YearSearchForm").hide();
	    Ext.getCmp("MonthSearchForm").hide();
	    Ext.getCmp("NormalSearchForm").hide();
    },
  	//自定义查询查询
    onNormalSearchBtnClick: function(button, e, eOpts) {
		var panel = Ext.getCmp("NormalSearchForm");
	    if(panel.isHidden()){
	        panel.show();
	        panel.getForm().reset();//重置表单
	    }else{
	        panel.hide();
	    }
	    Ext.getCmp("YearSearchForm").hide();
	    Ext.getCmp("MonthSearchForm").hide();
	    Ext.getCmp("DateSearchForm").hide();
    },
    
    //加载数据
    reloadListChartStore:function(formPanel){
    	if(formPanel.isValid()){
    		this.reloadZgListChartStore(formPanel.getValues());
    		this.reloadBzListChartStore(formPanel.getValues());
    		this.reloadPgListChartStore(formPanel.getValues());
    		this.reloadTgListChartStore(formPanel.getValues());
    	}
    },
    //根据年度查询-选择年度事件
    onStartDate_yearComboboxChange: function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("YearSearchForm"));
    },
    //根据年度查询-排序方式
    onOrderby_yearComboboxChange: function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("YearSearchForm"));
    },
    //根据年度查询-结果数量
    onTopNum_yearComboboxChange: function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("YearSearchForm"));
    },
    //根据月份查询-月份
    onStartDate_monthTextFieldChange: function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("MonthSearchForm"));
    },
    //根据月份查询-排序方式
    onOrderby_monthComboboxChange:function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("MonthSearchForm"));
    },
    //根据月份查询-数量
    onTopNum_monthComboboxChange:function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("MonthSearchForm"));
    },
    //按照日期查询-日期
    onStartDate_dateDatefieldChange:function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("DateSearchForm"));
    },
    //按照日期查询-排序方式
    onOrderby_dateComboboxChange:function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("DateSearchForm"));
    },
    //按照日期查询-数量
    onTopNum_dateComboboxChange:function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("DateSearchForm"));
    },
    //自定义查询-开始日期
    onStartDate_normalDatefieldChange:function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("NormalSearchForm"));
    },
    //自定义查询-结束日期
    onEndDate_normalDateFieldChange:function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("NormalSearchForm"));
    },
    //自定义查询-排序方式
    onOrderby_normalComboboxChange:function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("NormalSearchForm"));
    },
    //自定义查询-数量
    onTopNum_normalComboboxChange:function(field, newValue, oldValue, eOpts) {
    	this.reloadListChartStore(Ext.getCmp("NormalSearchForm"));
    },
    //制管数据
    reloadZgListChartStore:function(data){
    	var chart=Ext.getCmp("ZgListChart");
    	chart.store.removeAll();
    	chart.store.setProxy({
	 		url:'workLoadChart/zg.do',
            type: 'ajax',
            extraParams:data,
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json
	            root: 'data'
            }
    	});
    	chart.store.load(); 
    },
    //包装数据
    reloadBzListChartStore:function(data){
    	var chart=Ext.getCmp("BzListChart");
    	chart.store.removeAll();
    	chart.store.setProxy({
	 		url:'workLoadChart/bz.do',
            type: 'ajax',
            extraParams:data,
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json
	            root: 'data'
            }
    	});
    	chart.store.load(); 
    },
    //抛光数据
    reloadPgListChartStore:function(data){
    	var chart=Ext.getCmp("PgListChart");
    	chart.store.removeAll();
    	chart.store.setProxy({
	 		url:'workLoadChart/pg.do',
            type: 'ajax',
            extraParams:data,
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json
	            root: 'data'
            }
    	});
    	chart.store.load(); 
    },
    //推管数据
    reloadTgListChartStore:function(data){
    	var chart=Ext.getCmp("TgListChart");
    	chart.store.removeAll();
    	chart.store.setProxy({
	 		url:'workLoadChart/tg.do',
            type: 'ajax',
            extraParams:data,
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json
	            root: 'data'
            }
    	});
    	chart.store.load(); 
    },
    init: function(application) {
        this.control({
        	"button[id=RefreshBtn]": {
                click: this.onRefreshBtnClick
            },
            "button[id=YearSearchBtn]": {
                click: this.onYearSearchBtnClick
            },
            "combobox[id=startDate_year]": {
                change: this.onStartDate_yearComboboxChange
            },
            "combobox[id=orderby_year]": {
                change: this.onOrderby_yearComboboxChange
            },
            "combobox[id=topNum_year]": {
                change: this.onTopNum_yearComboboxChange
            },
            "button[id=MonthSearchBtn]": {
                click: this.onMonthSearchBtnClick
            },
            "button[id=DateSearchBtn]": {
                click: this.onDateSearchBtnClick
            },
            "button[id=NormalSearchBtn]": {
                click: this.onNormalSearchBtnClick
            },
            "textfield[id=startDate_month]":{
            	change: this.onStartDate_monthTextFieldChange
            },
            "combobox[id=orderby_month]": {
                change: this.onOrderby_monthComboboxChange
            },
            "combobox[id=topNum_month]": {
                change: this.onTopNum_monthComboboxChange
            },
            "datefield[id=startDate_date]":{
            	change: this.onStartDate_dateDatefieldChange
            },
            "combobox[id=orderby_date]": {
                change: this.onOrderby_dateComboboxChange
            },
            "combobox[id=topNum_date]": {
                change: this.onTopNum_dateComboboxChange
            },
            "textfield[id=startDate_normal]":{
            	change: this.onStartDate_normalDatefieldChange
            },
            "textfield[id=endDate_normal]":{
            	change: this.onEndDate_normalDateFieldChange
            },
            "combobox[id=orderby_normal]": {
                change: this.onOrderby_normalComboboxChange
            },
            "combobox[id=topNum_normal]": {
                change: this.onTopNum_normalComboboxChange
            }
            
        });
    }

});
