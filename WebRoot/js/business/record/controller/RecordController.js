/*
 * File: record/controller/RecordController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Record.controller.RecordController', {
    extend: 'Ext.app.Controller',
    //刷新按钮
    onRecordReloadBtnClick: function(button, e, eOpts) {
		this.reloadRecordGridPanelStore(null,'员工档案信息');
    },
    //添加按钮
    onRecordAddBtnClick: function(button, e, eOpts) {
    	Ext.create("Record.view.RecordWindow",{title:'添加员工档案',icon:'img/add.png'}).show();
    },
    // 保存按钮
	onRecordSaveBtnClick : function(button, e, eOpts) {
		var formPanel = Ext.getCmp("RecordFormPanel");
		if (!formPanel.isDirty()) {
			Ext.getCmp("RecordWindow").close();
			return;
		}
		if (formPanel.isValid()) {
			Ext.MessageBox.confirm("提示信息", "确定要保存吗？", function(btnId) {
				if (btnId == 'yes') {
					formPanel.submit( {
						url : 'record/addRecord.do',
						method : 'POST',
						waitTitle : "提示",
						waitMsg : '正在提交数据，请稍后...',
						params : formPanel.form.getValues(),
						success : function(form, action) {
							var result = JSON
									.parse(action.response.responseText);
							if (result.success) {
								Ext.Msg.show( {
									title : '提示信息',
									msg : '操作成功!',
									buttons : Ext.Msg.OK,
									icon : Ext.MessageBox.INFO
								});
								Ext.getCmp("RecordWindow").close();
								Ext.getCmp("RecordGridPanel").store.load();
							} else {
								Ext.Msg.show( {
									title : '提示信息',
									msg : '操作失败!',
									buttons : Ext.Msg.OK,
									icon : Ext.MessageBox.INFO
								});
							}
						},
						failure : function(form, action) {
							onActionFailureTypeShow(action);
						},
						scope : this
					});
				}
			}, this);
		}
	},
    // 关闭按钮
    onRecordCloseBtnClick: function(button, e, eOpts) {
    	Ext.getCmp("RecordWindow").close();
    },
    //修改按钮
    onRecordUpdBtnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("RecordGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条档案信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        Ext.create("Record.view.RecordWindow",{title:'修改员工档案信息',icon:'img/update.png'}).show();
   	    Ext.getCmp("RecordFormPanel").loadRecord(selectionModel.getSelection()[0]);
    },
    //删除按钮
    onRecordDelBtnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("RecordGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条档案信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
        Ext.MessageBox.confirm("提示信息", "确定要删除吗？", function (btnId) {
            if (btnId == "yes") {
            	 Ext.Msg.wait('正在处理数据，请稍候...','提示');
                Ext.Ajax.request({
            		url:"record/delRecord.do",
            		method:"POST",
            		params:data,
            		success:function(responst){
                	 	Ext.Msg.hide();
            			var result = JSON.parse(responst.responseText); 
            			if(result.success){
            				 Ext.Msg.show({
                  				title : '提示信息',
                  				msg :'删除成功!',
                  				buttons : Ext.Msg.OK,
                  				icon : Ext.MessageBox.INFO
                  			 });     
            				Ext.getCmp("RecordGridPanel").store.load();
            			}else{
            				 Ext.Msg.show({
                   				title : '提示信息',
                   				msg :'删除失败!',
                   				buttons : Ext.Msg.OK,
                   				icon : Ext.MessageBox.WARNING
                   			 });
            			}
            		},
        		    failure: function(from,action){
            			 Ext.Msg.hide();
            			 onActionFailureTypeShow(action);
            		},
            		scope:this
            	});
            }
        },this);
    },
    //查看按钮
    onRecordExportBtnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("RecordGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条档案信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
        if(data.recordAttLength==0){
        	 Ext.Msg.show({
  				title : '提示信息',
  				msg :'不存在档案附件',
  				buttons : Ext.Msg.OK,
  				icon : Ext.MessageBox.WARNING
  			});
        	return;
        }
        if(data.recordAttType.indexOf('image')>-1){
        	Ext.create("Record.view.ShowWindow",{title:'在线查看'}).show();
        	Ext.getCmp("pic").setSrc(extBasePath+"record/exportRecord.do?recordUuid="+data.recordUuid+"&time="+new Date().getTime());
        }else{
        	window.location.href=extBasePath+"record/exportRecord.do?recordUuid="+data.recordUuid+"&time="+new Date().getTime();
        }
    },
    //高级查询按钮
    onRecordShowSearchBtnClick: function(button, e, eOpts) {
    	  var panel = Ext.getCmp("RecordSearchFromPanel");
          if(panel.isHidden()){
              panel.show();
          }else{
              panel.hide();
          }
    },
    //查询按钮
    onRecordSearchBtnClick: function(button, e, eOpts) {
    	var searchForm = Ext.getCmp("RecordSearchFromPanel");
    	this.reloadRecordGridPanelStore(searchForm.getValues(),'高级查询-员工档案信息');
    }, 
    //重置按钮
    onRecordResetBtnClick: function(button, e, eOpts) {
    	Ext.getCmp("RecordSearchFromPanel").getForm().reset();
    	this.reloadRecordGridPanelStore(null,'员工档案信息');
    }, 
    //刷新数据
    reloadRecordGridPanelStore:function(data,text){
    	var gridPanel=Ext.getCmp("RecordGridPanel");
    	gridPanel.store.setProxy({
	 		url:'record/getRecordPage.do',
            type: 'ajax',
            extraParams:data,
            groupField: 'recordUserName',
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json   
	            root: 'data',   
	            //获取数据总数 
	            totalProperty:'dataSize'
            }
    	});
    	gridPanel.store.load(); 
    	gridPanel.setTitle(text);
    },
    //员工编号失去焦点事件，判断是否存在该编号人员员工
    onRecordUserNumberBlur: function(component, e, eOpts) {
    	if(component.readOnly){
    		return;
    	}
    	if(null==component.value||""==component.value){
    		return;
    	}
    	var hiddenValue=Ext.getCmp("recordUserNumber_hidden").value;
    	if(component.value==hiddenValue){
    		return;
    	}
    	Ext.Msg.wait('正在查找人员信息，请稍候...','提示');
    	Ext.Ajax.request({
    		url:"user/validateUserNumber.do",
     		method:"POST",
     		params:{
        	 	'userNumber':component.value
         	},
     		success:function(responst){
         		Ext.Msg.hide();
     			var result = JSON.parse(responst.responseText); 
     			if(result.success){
     				if(result.data.userState==2){
     					var msg='该员工已离职';
     					Ext.Msg.show({
            				title : '提示信息',
            				msg : msg,
            				buttons : Ext.Msg.OK,
            				icon : Ext.MessageBox.WARNING
            			 });
         				component.setValue("");
         				Ext.getCmp("recordUserNumber_hidden").setValue("");
     				}else{
     					Ext.getCmp("recordUserUuid").setValue(result.data.userUuid);//用户uuid
     					Ext.getCmp("recordUserGender").setValue(result.data.userGender);//用户性别
     					Ext.getCmp("recordUserName").setValue(result.data.userName);//用户名称
     					Ext.getCmp("recordUserNumber_hidden").setValue(component.value);
     				}
     			}else{
     				var msg='没有找到该员工，请重新选择';
     				Ext.Msg.show({
        				title : '提示信息',
        				msg : msg,
        				buttons : Ext.Msg.OK,
        				icon : Ext.MessageBox.WARNING
        			 });
     				component.setValue("");
     				Ext.getCmp("recordUserNumber_hidden").setValue("");
     			}
     		},
 		    failure: function(from,action){
     			 Ext.Msg.hide();
     			 Ext.getCmp("recordUserNumber_hidden").setValue("");
     			 onActionFailureTypeShow(action);
     		},
     		scope:this
    	});
    },
    //定时器,解决单击事件双击事件问题
    task:new Ext.util.DelayedTask(),
   //用户双击事件
    onRecordGridPanelCellDblClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
       Ext.create("Record.view.RecordWindow",{title:'修改员工档案信息',icon:'img/update.png'}).show();
	   Ext.getCmp("RecordFormPanel").loadRecord(record);
    },
    //用户单击事件
    onRecordGridPanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.getCmp("RecordUpdBtn").enable(true);
    	Ext.getCmp("RecordDelBtn").enable(true);
		if (e.getTarget().innerHTML === '查看'||e.getTarget().innerHTML === '下载' ){
			this.showFileHref(record.data);
		}
	},
	//点击超链接查看附件
	showFileHref(data){
		 if(data.recordAttType.indexOf('image')>-1){
        	Ext.create("Record.view.ShowWindow",{title:'在线查看'}).show();
        	Ext.getCmp("pic").setSrc(extBasePath+"record/exportRecord.do?recordUuid="+data.recordUuid+"&time="+new Date().getTime());
        }else{
        	window.location.href=extBasePath+"record/exportRecord.do?recordUuid="+data.recordUuid+"&time="+new Date().getTime();
        }
	},
    //选择员工按钮
    onRecordChoseUserBtnClick:function(button, e, eOpts) {
    	Ext.create("Record.view.LoggingUserWindow",{"title":"双击选择员工","icon":"img/search.png"}).show();
    },
    //选择人员-刷新按钮
    onLoggingUserRefreshBtnClick:function(button, e, eOpts) {
    	this.reloadOrgGridPanelStore({'orgUuid':null},"-员工信息列表");
    },
   //选择人员-关闭按钮
    onLoggingUserCloseBtnClick:function(button, e, eOpts) {
    	Ext.getCmp("LoggingUserWindow").close();
    },
   //选择人员-保存按钮
    onLoggingUserSureBtnClick:function(button, e, eOpts) {
    	var gridPanel=Ext.getCmp("LoggingUserGridPanel");
    	var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
        	 Ext.Msg.show({
      				title : '提示信息',
      				msg :'请选择一条人员信息',
      				buttons : Ext.Msg.OK,
      				icon : Ext.MessageBox.WARNING
      			});
             return;
         }
        var data = selectionModel.getSelection()[0].data;
        Ext.getCmp("recordUserNumber").setValue(data.userNumber);
        Ext.getCmp("recordUserNumber_hidden").setValue(data.userNumber);
        
        Ext.getCmp("recordUserUuid").setValue(data.userUuid);//用户uuid
		Ext.getCmp("recordUserGender").setValue(data.userGender);//用户性别
		Ext.getCmp("recordUserName").setValue(data.userName);//用户名称
        Ext.getCmp("LoggingUserWindow").close();
    },
    //定时器,解决单击事件双击事件问题
    task:new Ext.util.DelayedTask(),
    //组织机构单击事件
    onOrgTreePanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	this.reloadOrgGridPanelStore({'orgUuid':record.data.id},record.data.text+"-员工信息列表");
    },
    //左侧根据部门查询
    onShowOrgTreePanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	this.reloadRecordGridPanelStore({'orgUuid':record.data.id},record.data.text+'-员工档案信息');
    	Ext.getCmp("searchOrgUuid").setValue(record.data.id);
    },
    //刷新人员数据
    reloadOrgGridPanelStore:function(data,text){
    	var gridPanel=Ext.getCmp("LoggingUserGridPanel");
    	gridPanel.store.setProxy({
	 		url:'user/getUserPage.do',
            type: 'ajax',
            extraParams:data,
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json   
	            root: 'data',   
	            //获取数据总数 
	            totalProperty:'dataSize'
            }
    	});
    	gridPanel.store.load(); 
    	gridPanel.setTitle(text);
    },
    //人员表单单击事件
    onLoggingUserGridPanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.getCmp("LoggingUserSureBtn").setDisabled(false);//保存按钮
    },
    //人员表单双击事件
    onLoggingUserGridPanelDblClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	 var data = record.data;
    	 Ext.getCmp("recordUserNumber").setValue(data.userNumber);
         Ext.getCmp("recordUserNumber_hidden").setValue(data.userNumber);
         
         Ext.getCmp("recordUserUuid").setValue(data.userUuid);//用户uuid
 		 Ext.getCmp("recordUserGender").setValue(data.userGender);//用户性别
 		 Ext.getCmp("recordUserName").setValue(data.userName);//用户名称
         Ext.getCmp("LoggingUserWindow").close();
    },
    onExportBtnClick:function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("RecordGridPanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条档案信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
        window.location.href=extBasePath+"record/exportRecord.do?recordUuid="+data.recordUuid+"&time="+new Date().getTime();
    },
    onCloseShowWindowBtnClick:function(button, e, eOpts) {
    	Ext.getCmp("ShowWindow").close();
    },
    init: function(application) {
        this.control({
            "button[id=RecordReloadBtn]": {
                click: this.onRecordReloadBtnClick
            },
            "button[id=RecordAddBtn]": {
            	 click: this.onRecordAddBtnClick
            },
            "button[id=RecordSaveBtn]": {
            	click: this.onRecordSaveBtnClick
            },
            "button[id=RecordCloseBtn]": {
            	click: this.onRecordCloseBtnClick
            },
            "button[id=RecordUpdBtn]": {
            	click: this.onRecordUpdBtnClick
            },
            "button[id=RecordDelBtn]": {
            	click: this.onRecordDelBtnClick
            },
            "button[id=RecordExportBtn]": {
            	click: this.onRecordExportBtnClick
            },
            "button[id=RecordShowSearchBtn]": {
            	click: this.onRecordShowSearchBtnClick
            },
            "button[id=RecordSearchBtn]": {
            	click: this.onRecordSearchBtnClick
            },
            "button[id=RecordResetBtn]": {
            	click: this.onRecordResetBtnClick
            },
            'textfield[id=recordUserNumber]':{
           	 	blur: this.onRecordUserNumberBlur
            },
            "#RecordGridPanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    				this.task.delay(200,this.onRecordGridPanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		},
	    		celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	    			this.task.delay(200,this.onRecordGridPanelCellDblClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            "button[id=RecordChoseUserBtn]": {
            	click: this.onRecordChoseUserBtnClick
            },
            "button[id=LoggingUserRefreshBtn]":{
            	click:this.onLoggingUserRefreshBtnClick
            },
            "button[id=LoggingUserSureBtn]":{
            	click:this.onLoggingUserSureBtnClick
            },
            "button[id=LoggingUserCloseBtn]":{
            	click:this.onLoggingUserCloseBtnClick
            },
            "#OrgTreePanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
					this.task.delay(200,this.onOrgTreePanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            "#LoggingUserGridPanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
					this.task.delay(200,this.onLoggingUserGridPanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		},
	    		celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	    			this.task.delay(200,this.onLoggingUserGridPanelDblClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            'button[id=exportBtn]':{
            	click:this.onExportBtnClick
            },
            'button[id=closeShowWindowBtn]':{
            	click:this.onCloseShowWindowBtnClick
            },
            "#ShowOrgTreePanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
					this.task.delay(200,this.onShowOrgTreePanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            }
        });
    }

});
