/*
 * File: product/controller/ProductController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Product.controller.ProductController', {
    extend: 'Ext.app.Controller',

    //刷新按钮
    onProduct_refresh_btnClick: function(button, e, eOpts) {
		Ext.getCmp("product_gridpanel").store.load();
    },
    //添加按钮
    onProduct_add_btnClick: function(button, e, eOpts) {
        Ext.create("Product.view.ProductWindow",{'icon':'img/add.png'}).show();
    },
    //删除按钮
    onProduct_del_btnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("product_gridpanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条产品信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        var data = selectionModel.getSelection()[0].data;
        Ext.MessageBox.confirm("提示信息", "确定要删除吗？", function (btnId) {
            if (btnId == "yes") {
            	 Ext.Msg.wait('正在处理数据，请稍候...','提示');
                Ext.Ajax.request({
            		url:"product/delProduct.do",
            		method:"POST",
            		params:data,
            		success:function(responst){
                	 	Ext.Msg.hide();
            			var result = JSON.parse(responst.responseText); 
            			if(result.success){
            				 Ext.Msg.show({
                  				title : '提示信息',
                  				msg :'删除成功!',
                  				buttons : Ext.Msg.OK,
                  				icon : Ext.MessageBox.INFO
                  			 });     
            				 Ext.getCmp("product_gridpanel").store.load();
            			}else{
            				 Ext.Msg.show({
                   				title : '提示信息',
                   				msg :'删除失败!',
                   				buttons : Ext.Msg.OK,
                   				icon : Ext.MessageBox.WARNING
                   			 });
            			}
            		},
        		    failure: function(from,action){
            			 Ext.Msg.hide();
            			 onActionFailureTypeShow(action);
            		},
            		scope:this
            	});
            }
        },this);
    },
    //修改按钮
    onProduct_upd_btnClick: function(button, e, eOpts) {
    	var gridPanel = Ext.getCmp("product_gridpanel");
        var selectionModel = gridPanel.getSelectionModel();
        if(selectionModel.getCount()<=0){
       	 Ext.Msg.show({
     				title : '提示信息',
     				msg :'请选择一条产品信息',
     				buttons : Ext.Msg.OK,
     				icon : Ext.MessageBox.WARNING
     			});
            return;
        }
        Ext.create("Product.view.ProductWindow",{title:'修改产品信息',icon:'img/update.png'}).show();
   	    Ext.getCmp("ProductWindowForm").loadRecord(selectionModel.getSelection()[0]);
    },
    
    //关闭按钮
    onProduct_close_btnClick: function(button, e, eOpts) {
        Ext.getCmp("ProductWindow").close();
    },
   //保存按钮
    onProduct_save_btnClick: function(button, e, eOpts) {
    	 var formPanel = Ext.getCmp("ProductWindowForm");
		if (!formPanel.isDirty()) {
			Ext.getCmp("ProductWindow").close();
			return;
		}
		if (formPanel.isValid()) {
			Ext.MessageBox.confirm("提示信息", "确定要保存吗？", function(btnId) {
				if (btnId == 'yes') {
					formPanel.submit( {
						url : 'product/addProduct.do',
						method : 'POST',
						waitTitle : "提示",
						waitMsg : '正在提交数据，请稍后...',
						params : formPanel.form.getValues(),
						success : function(form, action) {
							var result = JSON
									.parse(action.response.responseText);
							if (result.success) {
								Ext.Msg.show( {
									title : '提示信息',
									msg : '操作成功!',
									buttons : Ext.Msg.OK,
									icon : Ext.MessageBox.INFO
								});
								Ext.getCmp("ProductWindow").close();
								this.onProduct_refresh_btnClick();
							} else {
								Ext.Msg.show( {
									title : '提示信息',
									msg : '操作失败!',
									buttons : Ext.Msg.OK,
									icon : Ext.MessageBox.INFO
								});
							}
						},
						failure : function(form, action) {
							onActionFailureTypeShow(action);
						},
						scope : this
					});
				}
			}, this);
		}
    },
    
    // 高级查询
    onProduct_show_search_btnClick: function(button, e, eOpts) {
        var panel = Ext.getCmp("product_search_form");
        if(panel.isHidden()){
            panel.show();
        }else{
            panel.hide();
        }
    },
    //定时器,解决单击事件双击事件问题
    task:new Ext.util.DelayedTask(),
   //用户双击事件
    onProductGridpanelCellDblClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	 Ext.create("Product.view.ProductWindow",{title:'修改产品信息',icon:'img/update.png'}).show();
	     Ext.getCmp("ProductWindowForm").loadRecord(record);
    },
    //用户单击事件
    onProductGridpanelCellClick:function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	Ext.getCmp("product_upd_btn").enable(true);
    	Ext.getCmp("product_del_btn").enable(true);
    },
    //查询按钮
    onProduct_search_btnClick: function(button, e, eOpts) {
    	var searchForm = Ext.getCmp("product_search_form");
    	this.reloadProductGridPanelStore(searchForm.getValues(),'高级查询-产品信息');
    },
    //重置按钮按钮
    onProduct_reset_btnClick: function(button, e, eOpts) {
    	 Ext.getCmp("productName").setValue("");
    	 Ext.getCmp("productNum").setValue("");
    	this.reloadProductGridPanelStore(null,'产品信息');
    },
    //刷新数据
    reloadProductGridPanelStore:function(data,text){
    	var gridPanel=Ext.getCmp("product_gridpanel");
    	gridPanel.store.setProxy({
	 		url:'product/getProductPage.do',
            type: 'ajax',
            extraParams:data,
            reader: {
    			type: 'json',
	   	  	 	//数据格式为json   
	            root: 'data',   
	            //获取数据总数 
	            totalProperty:'dataSize'
            }
    	});
    	gridPanel.store.load(); 
    	gridPanel.setTitle(text);
    },
    init: function(application) {
        this.control({
        	"button[id=product_refresh_btn]": {
                click: this.onProduct_refresh_btnClick
            },
            "button[id=product_add_btn]": {
                click: this.onProduct_add_btnClick
            },
            "button[id=product_del_btn]": {
                click: this.onProduct_del_btnClick
            },
            "button[id=product_upd_btn]": {
                click: this.onProduct_upd_btnClick
            },
            "button[id=product_close_btn]": {
                click: this.onProduct_close_btnClick
            },
            "button[id=product_save_btn]": {
                click: this.onProduct_save_btnClick
            },
            "button[id=product_show_search_btn]": {
                click: this.onProduct_show_search_btnClick
            },
            "#product_gridpanel":{
            	cellclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
    				this.task.delay(200,this.onProductGridpanelCellClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		},
	    		celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){
	    			this.task.delay(200,this.onProductGridpanelCellDblClick,this,new Array(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts));
	    		}
            },
            "button[id=product_search_btn]":{
            	click: this.onProduct_search_btnClick
            },
            "button[id=product_reset_btn]":{
            	click: this.onProduct_reset_btnClick
            }
            
        });
    }

});
